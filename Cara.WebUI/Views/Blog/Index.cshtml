@model BlogViewModel
@{
    ViewData["Title"] = "Index";
}

<section id="page-header" class="blog-header darkmode-ignore">
    @foreach (var banner in Model.BlogBanners.Where(b => b.IsActive))
    {
    <img src="~/admin/assets/database/headbanners/@banner.Photo" alt="Header Image" class="header-image" />
    <h2>@banner.Title</h2>
    <p>@banner.Description</p>    
    }
</section>

<section id="blog-category" class="section-p1">
    <div class="category-selector">
        <div class="categoryBlog selected allCategoryBlog" onclick="filterBlogs(null)">All</div>
        @foreach (var category in Model.BCategories)
        {
            <div class="categoryBlog" data-category-id="@category.Id" onclick="filterBlogs(@category.Id)">
                @category.Name
            </div>
        }
    </div>
    <div class="selected-category">Selected Category: <span id="selected">All</span></div>
</section>


<section id="blog">
     <div id="blog-content">
        @foreach (var item in Model.Blogs)
        {
            <div class="blog-box" data-category="@item.BCategoryId">
                <div class="blog-img">
                    <img src="~/admin/assets/database/blogs/@item.Photo" alt="" />
                </div>
                <div class="blog-details">
                    <h4>@item.Title</h4>
                    @if (item.Description.Length >= 130)
                    {
                                <p>
                            @Html.Raw(item.Description.Substring(0,130))...
                                </p>
                    }
                    else
                    {
                        @Html.Raw(item.Description)
                    }
                    <a asp-controller="Blog" asp-action="Detail" asp-route-id="@item.Id">CONTINUE READING</a>
                </div>
                <h1>@item.CreatedAt.ToString("dd/MM")</h1>
            </div>
        }
</div>
</section>


<section id="pagination" class="section-p1">
  
</section>

<section id="newsletter" class="section-p1 section-m1">
    <div class="newstext">
        <h4>Sign Up For Newsletters</h4>
        <p>
            Get E-mail updates about our latest shop and
            <span>special offers.</span>
        </p>
    </div>
    <div class="form">
        @await Component.InvokeAsync("Subscribe")
    </div>
</section>


<script>
    // Sayfa yüklendiğinde "All" düğmesini seçili yap
    document.querySelector('.selected').classList.add('changeBlog');

    function hideAllBlogs() {
        document.querySelectorAll('.blog-box').forEach(function (blog) {
            blog.style.display = 'none';
        });
    }

    // Kategoriye göre ürünleri filtrelemek için bu fonksiyon kullanılır
    function filterBlogs(categoryId) {
        hideAllBlogs(); // Tüm ürünleri gizle

        // Tüm ürünleri göstermek için "All" seçeneği
        if (categoryId === null) {
            document.querySelectorAll('.blog-box').forEach(function (blog) {
                blog.style.display = 'flex';
            });
            return;
        }

        // Seçilen kategoriye ait ürünleri göster
        document.querySelectorAll('.blog-box[data-category="' + categoryId + '"]').forEach(function (blog) {
            blog.style.display = 'flex';
        });

        // Seçilen kategoriye ait düğmeyi seçili yap
        document.querySelectorAll('.categoryBlog').forEach(function (blogDiv) {
            blogDiv.classList.remove('changeBlog');
        });
        document.querySelector('.categoryBlog[data-category-id="' + categoryId + '"]').classList.add('changeBlog');
    }

</script>


